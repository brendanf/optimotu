% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_thresholds.R
\name{calculate_cluster_measures}
\alias{calculate_cluster_measures}
\title{Calculate clustering quality measures}
\usage{
calculate_cluster_measures(
  k,
  c,
  threads = 1L,
  measures = c("MCC", "RI", "ARI", "FMI", "MI", "AMI", "FM")
)
}
\arguments{
\item{k}{(\code{integer} matrix) the clustering partitions at different thresholds}

\item{c}{(\code{integer} vector) the true partition}

\item{threads}{(\code{integer(1)}) the number of threads to use}

\item{measures}{(\code{character} vector) the clustering quality measures to
calculate. Supported measures are "MCC", "RI", "ARI", "FMI", "MI", "AMI", and
"FM".}
}
\value{
(\code{data.frame}) a data frame with the following columns:
\itemize{
\item \code{threshold} (\code{numeric}) the clustering threshold
\item \code{measure} (\code{character}) the clustering quality measure
\item \code{value} (\code{numeric}) the value of the measure at the threshold
The results are organized by the \code{measure}, and within each measure by the
thresholds in the same order as \code{k}.  However the \code{measure} column is not
guaranteed to be in the same order as the input.
}
}
\description{
This function is primarily intended for use in plotting the clustering
quality measures at different thresholds. For choosing the best threshold,
use \code{optimize_thresholds()} or \code{find_best_threshold()}.
}
\details{
The measures are abbreviated as follows:
\itemize{
\item MCC: \code{matthews_correlation_coefficient()}
\item RI: \code{rand_index()}
\item ARI: \code{adjusted_rand_index()}
\item FMI: \code{fowlkes_mallow_index()}
\item MI: \code{adjusted_mutual_information()} (mutual information)
\item AMI: \code{adjusted_mutual_information()} (adjusted mutual information)
\item FM: \code{fmeasure()}
}

A single call to this function with several measures may be faster than
multiple calls with a single measure, because the confusion matrix and/or
mutual information are calculated only once.
}
